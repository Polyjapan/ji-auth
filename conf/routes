
# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

OPTIONS        /                                        controllers.OptionsController.rootOptions
OPTIONS        /*url                                    controllers.OptionsController.options(url: String)

# API

GET            /api/ticket/:ticket                      controllers.api.AppTicketController.getAppTicket(ticket: String)
GET            /api/refresh/:refreshToken               controllers.api.TokenRefreshController.refreshToken(refreshToken: String)
GET            /api/app_login/:targetClientId           controllers.api.AppLogInController.login(targetClientId: String)
+nocsrf
POST           /api/groups/:name/members                controllers.api.AppGroupsController.addMemberToGroup(name: String)
GET            /api/groups/:name/members                controllers.api.AppGroupsController.getGroupMembers(name: String)
DELETE         /api/groups/:name/members/:member        controllers.api.AppGroupsController.removeMemberFromGroup(name: String, member: Int)

GET            /api/user/:user                          controllers.api.AppProfileController.getUserProfile(user: Int)
GET            /api/user                                controllers.api.AppProfileController.getBearerProfile
GET            /api/user/search/:query                  controllers.api.AppProfileController.searchUsers(query: String)
GET            /api/users/$users<[0-9,]+>               controllers.api.AppProfileController.getUserProfiles(users: String)

# CAS

GET            /cas/login                               controllers.cas.CASLoginController.loginGet(service: String)

GET            /cas/v1/validate                         controllers.cas.CASv1Controller.validate(ticket: String, service: String)
GET            /cas/v1/login                            controllers.cas.CASLoginController.loginGet(service: String)

GET            /cas/v2/serviceValidate                  controllers.cas.CASv2Controller.serviceValidate(ticket: String, service: String)
GET            /cas/v2/proxyValidate                    controllers.cas.CASv2Controller.proxyValidate(ticket: String, service: String)
GET            /cas/v2/login                            controllers.cas.CASLoginController.loginGet(service: String)

# General redirection

GET            /redirect                                controllers.forms.RedirectController.redirectGet

# UI

GET            /register                                controllers.explicit.RegisterController.registerGet
POST           /register                                controllers.explicit.RegisterController.registerPost

GET            /login                                   controllers.explicit.LoginController.loginGet(app: Option[String] ?= None, tokenType: Option[String] ?= None, service: Option[String] ?= None)
POST           /login                                   controllers.explicit.LoginController.loginPost

GET            /update_info                             controllers.explicit.UpdateInfoController.updateGet
POST           /update_info                             controllers.explicit.UpdateInfoController.updatePost

GET            /forgot_password                         controllers.explicit.PasswordResetController.passwordResetGet
POST           /forgot_password                         controllers.explicit.PasswordResetController.passwordResetPost

GET            /password_reset/:email/:code             controllers.explicit.PasswordResetController.passwordResetChangeGet(email: String, code: String)
POST           /password_reset                          controllers.explicit.PasswordResetController.passwordResetChangePost

GET            /email_confirm/:email/:code              controllers.explicit.EmailConfirmController.emailConfirmGet(email: String, code: String)

GET            /logout                                  controllers.explicit.LogoutController.logout(app: Option[String])

GET            /assets/*file                            controllers.Assets.at(file)


# Management web UI

GET            /                                        controllers.management.ManagementHomeController.home

GET            /groups/create                           controllers.management.GroupCRUDController.createGroupForm
POST           /groups/create                           controllers.management.GroupCRUDController.createGroup
GET            /groups/:name                            controllers.management.GroupCRUDController.getGroup(name: String)
DELETE         /groups/:name                            controllers.management.GroupCRUDController.deleteGroup(name: String)
GET            /groups/:name/update                     controllers.management.GroupCRUDController.updateGroupForm(name: String)
POST           /groups/:name/update                     controllers.management.GroupCRUDController.updateGroup(name: String)

POST           /groups/:name/members                    controllers.management.GroupMembersCRUDController.addMember(name: String)
GET            /groups/:name/members/:id/update         controllers.management.GroupMembersCRUDController.updateMemberForm(name: String, id: Int)
POST           /groups/:name/members/:id/update         controllers.management.GroupMembersCRUDController.updateMember(name: String, id: Int)
POST           /groups/:name/members/:id/delete         controllers.management.GroupMembersCRUDController.deleteMember(name: String, id: Int)

GET            /apps/create                             controllers.management.AppsCRUDController.createAppForm
POST           /apps/create                             controllers.management.AppsCRUDController.createApp
GET            /apps/:id                                controllers.management.AppsCRUDController.getApp(id: Int)
GET            /apps/:id/update                         controllers.management.AppsCRUDController.updateAppForm(id: Int)
POST           /apps/:id/update                         controllers.management.AppsCRUDController.updateApp(id: Int)





